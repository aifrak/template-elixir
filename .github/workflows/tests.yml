name: Tests

on: [pull_request, push]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-20.04

    env:
      IMAGE_TARGET: base
      IMAGE_TAG: aifrak/template-elixir:latest
      CACHE_OLD: /tmp/.buildx-cache
      CACHE_NEW: /tmp/.buildx-cache-new

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      # ---------------------------------------------- #
      #                     Docker                     #
      # ---------------------------------------------- #

      - name: Add environment variables used by Docker build
        run: |
          echo "USER_UID=$(id -u)" >> $GITHUB_ENV
          echo "USER_GID=$(id -g)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.4.1

      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image and Docker cache
        uses: docker/build-push-action@v2.5.0
        with:
          load: true
          target: ${{ env.IMAGE_TARGET }}
          tags: ${{ env.IMAGE_TAG }}
          build-args: |
            USER_UID=${{ env.USER_UID }}
            USER_GID=${{ env.USER_GID }}
          cache-from: type=local,src=${{ env.CACHE_OLD }}
          cache-to: type=local,dest=${{ env.CACHE_NEW }}

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move Docker cache
        run: |
          rm -rf ${{ env.CACHE_OLD }}
          mv ${{ env.CACHE_NEW }} ${{ env.CACHE_OLD }}

      - name: Starts all docker services
        run: |
          ./run dc:up

      # ---------------------------------------------- #
      #                     NodeJS                     #
      # ---------------------------------------------- #

      - name: Build node modules cache
        uses: actions/cache@v2.1.6
        id: node-modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install node modules
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          ./run dc:exec bash -c "npm ci --quiet && touch node_modules/.gitkeep"

      # ---------------------------------------------- #
      #                     Elixir                     #
      # ---------------------------------------------- #

      - name: Build Elixir cache
        id: elixir-cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install Elixir dependencies
        if: steps.elixir-cache.outputs.cache-hit != 'true'
        run: |
          ./run dc:exec mix deps.get

      - name: Compile Elixir application (dev)
        if: steps.elixir-cache.outputs.cache-hit != 'true'
        run: |
          ./run dc:exec mix compile

      - name: Compile Elixir application (test)
        if: steps.elixir-cache.outputs.cache-hit != 'true'
        run: |
          ./run dc:exec bash -c "MIX_ENV=test mix compile"

      # ---------------------------------------------- #
      #                   Application                  #
      # ---------------------------------------------- #

      - name: Test
        run: |
          ./run dc:exec ./run test

      - name: Lint
        run: |
          ./run dc:exec ./run lint
