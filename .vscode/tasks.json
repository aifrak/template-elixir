{
  "version": "2.0.0",
  "tasks": [
    /* -------------------------------------------- */
    /*                     Main                     */
    /* -------------------------------------------- */
    {
      "label": "format",
      "type": "shell",
      "command": "./run",
      "args": ["format"],
      "problemMatcher": [],
      "detail": "Format code of the whole project"
    },
    {
      "label": "lint",
      "type": "shell",
      "command": "./run",
      "args": ["lint"],
      "problemMatcher": [],
      "detail": "Lint of the whole project"
    },
    {
      "label": "pre-commit",
      "type": "shell",
      "command": "./run",
      "args": ["pre-commit"],
      "problemMatcher": [],
      "detail": "Format, lint and test the whole project"
    },
    {
      "label": "test",
      "type": "shell",
      "command": "./run",
      "args": ["test"],
      "problemMatcher": [],
      "detail": "Test and lint the whole project"
    },
    /* -------------------------------------------- */
    /*                docker-compose                */
    /* -------------------------------------------- */
    {
      "label": "dc:build",
      "type": "shell",
      "command": "./run dc:build",
      "problemMatcher": [],
      "detail": "Build all docker services"
    },
    {
      "label": "dc:run",
      "type": "shell",
      "command": "./run dc:run ${input:fun}",
      "problemMatcher": [],
      "detail": "Run a function from './run' inside the 'app' docker service and remove stopped containers"
    },
    /* -------------------------------------------- */
    /*                      Dev                     */
    /* -------------------------------------------- */
    {
      "label": "dev:code",
      "type": "shell",
      "command": "./run",
      "args": ["dev:code"],
      "problemMatcher": [],
      "detail": "Build, run a command and down a docker service"
    },
    {
      "label": "dev:dc",
      "type": "shell",
      "command": "./run",
      "args": ["dev:dc", "${input:dockerCmd}"],
      "problemMatcher": [],
      "detail": "Run docker-compose with development configuration"
    },
    {
      "label": "dev:build",
      "type": "shell",
      "command": "./run",
      "args": ["dev:build"],
      "problemMatcher": [],
      "detail": "Build docker service with development configuration"
    },
    /* -------------------------------------------- */
    /*                    Elixir                    */
    /* -------------------------------------------- */
    {
      "label": "elixir:format",
      "type": "shell",
      "command": "./run",
      "args": ["elixir:format"],
      "problemMatcher": [],
      "detail": "Format Elixir files"
    },
    {
      "label": "elixir:lint",
      "type": "shell",
      "command": "./run",
      "args": ["elixir:lint"],
      "problemMatcher": [],
      "detail": "Lint Elixir files"
    },
    /* -------------------------------------------- */
    /*                  Elixir EEx                  */
    /* -------------------------------------------- */
    {
      "label": "elixir:eex:format",
      "type": "shell",
      "command": "./run",
      "args": ["elixir:eex:format"],
      "problemMatcher": [],
      "detail": "Format Embedded Elixir files"
    },
    {
      "label": "elixir:eex:lint",
      "type": "shell",
      "command": "./run",
      "args": ["elixir:eex:lint"],
      "problemMatcher": [],
      "detail": "Lint Embedded Elixir files"
    },
    /* -------------------------------------------- */
    /*                     Shell                    */
    /* -------------------------------------------- */
    {
      "label": "shell:format",
      "type": "shell",
      "command": "./run",
      "args": ["shell:format"],
      "problemMatcher": [],
      "detail": "Format Shell scripts"
    },
    {
      "label": "shell:lint",
      "type": "shell",
      "command": "./run",
      "args": ["shell:lint"],
      "problemMatcher": [],
      "detail": "Lint Shell scripts"
    },
    /* -------------------------------------------- */
    /*                  Dockerfile                  */
    /* -------------------------------------------- */
    {
      "label": "dockerfile:format",
      "type": "shell",
      "command": "./run",
      "args": ["dockerfile:format"],
      "problemMatcher": [],
      "detail": "Format all Dockerfiles"
    },
    {
      "label": "dockerfile:lint",
      "type": "shell",
      "command": "./run",
      "args": ["dockerfile:lint"],
      "problemMatcher": [],
      "detail": "Lint all Dockerfiles"
    }
  ],
  "inputs": [
    {
      "id": "dockerService",
      "type": "pickString",
      "description": "Docker service?",
      "options": ["app"],
      "default": "app"
    },
    {
      "id": "cmd",
      "type": "promptString",
      "description": "Command? (e.g. ./run test)"
    },
    {
      "id": "fun",
      "type": "promptString",
      "description": "Function from './run'? (e.g. lint)"
    },
    {
      "id": "dockerCmd",
      "type": "promptString",
      "description": "Docker command? (e.g. up -d)"
    },
    {
      "id": "userUid",
      "type": "promptString",
      "description": "User ID?",
      "default": "1000"
    },
    {
      "id": "groupUid",
      "type": "promptString",
      "description": "Group ID?",
      "default": "1000"
    }
  ]
}
